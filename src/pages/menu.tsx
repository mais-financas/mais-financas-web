import Head from 'next/head';
import { useEffect, useState } from 'react';
import styles from '@/styles/Home.module.css';
import { useRouter } from 'next/router';

export default function Home() {
  const router = useRouter();
  const [despesas, setDespesas] = useState([]);
  const [categories, setCategories] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState(null);
  const [totalValue, setTotalValue] = useState(0);

  const fetchCategories = () => {
    fetch('http://localhost:8080/categories')
      .then((response) => response.json())
      .then((data) => setCategories(data.categories))
      .catch((error) => console.error('Erro ao obter categorias:', error));
  };

  useEffect(() => {
    fetchCategories();
  }, []);

  useEffect(() => {
    fetch('http://localhost:8080/despesas')
      .then((response) => response.json())
      .then((data) => setDespesas(data.despesas))
      .catch((error) => console.error('Erro ao obter despesas:', error));
  }, []);

  useEffect(() => {
    // Calcular o valor total quando as despesas ou a categoria selecionada mudam
    const filteredExpenses = despesas.filter((despesa) =>
      selectedCategory ? despesa.Categoria === selectedCategory : true
    );
    const total = filteredExpenses.reduce((acc, despesa) => acc + despesa.Valor, 0);
    setTotalValue(total);
  }, [despesas, selectedCategory]);

  const handleFinancasClick = () => {
    router.push('/financas');
  };

  const handleMenuClick = () => {
    router.push('/menu');
  };

  const handleEstatisticaClick = () => {
    router.push('/estatistica');
  };

  const handleConsultoriaClick = () => {
    router.push('/consultoria');
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <ul className={styles.menu}>
          <li>
            <a onClick={handleFinancasClick}>+Finanças</a>
          </li>
          <li>
            <a onClick={handleMenuClick}>Menu</a>
          </li>
          <li>
            <a onClick={handleEstatisticaClick}>Estátistica</a>
          </li>
          <li>
            <a onClick={handleConsultoriaClick}>Consultoria</a>
          </li>
        </ul>

        <div className={styles.Bot}>
          <h1>Tela em desenvolvimento</h1>

          <div>
            <select
              onChange={(e) => setSelectedCategory(e.target.value)}
              value={selectedCategory || ''}
            >
              <option value="">Todas as categorias</option>
              {categories.map((category) => (
                <option key={category} value={category}>
                  {category}
                </option>
              ))}
            </select>
          </div>

          <p>Total das despesas: R$ {totalValue.toFixed(2)}</p>

          <ul>
            {despesas
              .filter((despesa) =>
                selectedCategory ? despesa.Categoria === selectedCategory : true
              )
              .map((despesa) => (
                <li key={despesa.id}>
                  <h1>Cadastro de Despesa</h1>
                  <div className={styles.form__group}>
                    <label htmlFor="Nome" className={styles.form__label}>
                      Nome: {despesa.Nome}
                    </label>
                  </div>

                  <div className={styles.form__group}>
                    <label htmlFor="Valor" className={styles.form__label}>
                      Valor: {despesa.Valor}
                    </label>
                  </div>

                  <div className={styles.form__group}>
                    <label htmlFor="Categoria" className={styles.form__label}>
                      Categoria: {despesa.Categoria}
                    </label>
                  </div>

                  <div className={styles.form__group}>
                    <label htmlFor="Recorrencia" className={styles.form__label}>
                      Recorrencia: {despesa.Recorrencia}
                    </label>
                  </div>
                </li>
              ))}
          </ul>
        </div>
      </main>
    </>
  );
}
