'use-client'
import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useRouter } from 'next/router'
import { Inter } from 'next/font/google'
import React, { useEffect, useState } from 'react'
import PieChart from '../Piechart'
import { Despesa } from '../financas/[id]'

const inter = Inter({ subsets: ['latin'] })

interface Categoria {
  id: number
  nome: string
}

interface ValorPorCategoria {
  categoria: string
  valor: number
}

interface ValorPorMes {
  mes: string
  valor: number
}

export interface ChartProps {
  labels: string[]
  values: number[]
}

function getMonth(dataEmString: string): number {
  const [ano, mes, dia] = dataEmString.split('-').map(Number)
  return new Date(ano, mes - 1, dia).getMonth() // Mês é base 0, então subtrai-se 1
}

export default function Home() {
  const router = useRouter()
  const { id } = router.query

  const [categorias, setCategorias] = useState<Categoria[]>([])
  const [valoresPorCategoria, setValoresPorCategoria] = useState<
    ValorPorCategoria[]
  >([])

  useEffect(() => {
    const categorias: Categoria[] = [
      { id: 1, nome: 'Essenciais' },
      { id: 2, nome: 'Transporte' },
      { id: 3, nome: 'Alimentação' },
      { id: 4, nome: 'Entretenimento' },
      { id: 5, nome: 'Saúde' },
      { id: 6, nome: 'Educação' },
      { id: 7, nome: 'Dívidas' },
    ]
    setCategorias(categorias)

    const fetchData = async () => {
      try {
        const response = await fetch(
          `https://mais-financas-api.onrender.com/api/despesas?gestorId=${id}`
        )
        const despesas: Despesa[] = await response.json()

        const valoresAgrupadosCategoria: ValorPorCategoria[] = categorias.map(
          (categoria) => ({
            categoria: categoria.nome,
            valor: 0,
          })
        )

        despesas.forEach((despesa) => {
          const { categoria_id, registros } = despesa

          valoresAgrupadosCategoria[categoria_id].valor += registros.reduce(
            (acc, registro) => acc + registro.valor,
            0
          )
        })

        setValoresPorCategoria(valoresAgrupadosCategoria)
      } catch (error) {
        console.error('Erro ao buscar dados:', error)
      }
    }

    fetchData()
  }, [id])

  const handleFinancasClick = () => {
    router.push(`/financas/${id}`)
  }

  const pieChartData: ChartProps = {
    labels: categorias.map((categoria) => categoria.nome) || [],
    values: valoresPorCategoria.map((gastos) => gastos.valor) || [],
  }

  return (
    <>
      <Head>
        <title>Estatísticas</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <ul className={styles.menu}>
          <li>
            <a onClick={handleFinancasClick}>+Finanças</a>
          </li>
          <li>
            <a onClick={() => {}}>Estatísticas</a>
          </li>
        </ul>

        <div className={styles.GraficoRosca}>
          <h1>Gestão de Gastos</h1>
          <PieChart labels={pieChartData.labels} values={pieChartData.values} />
        </div>
      </main>
    </>
  )
}
